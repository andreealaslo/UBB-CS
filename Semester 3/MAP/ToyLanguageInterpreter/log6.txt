Id: 2
Execution stack: 
(Ref(int) v|(New(v, "20")|(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))))))
Symbol table: 
Output list: 
File table:
Heap Table:


Id: 2
Execution stack: 
Ref(int) v
(New(v, "20")|(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))))
Symbol table: 
Output list: 
File table:
Heap Table:


Id: 2
Execution stack: 
Ref(int) v
(New(v, "20")|(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))))
Symbol table: 
Output list: 
File table:
Heap Table:


Id: 2
Execution stack: 
(New(v, "20")|(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap Table:


Id: 2
Execution stack: 
(New(v, "20")|(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap Table:


Id: 2
Execution stack: 
New(v, "20")
(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap Table:


Id: 2
Execution stack: 
New(v, "20")
(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap Table:


Id: 2
Execution stack: 
(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
(Ref(Ref(int)) a|(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
Ref(Ref(int)) a
(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
Ref(Ref(int)) a
(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
(New(a, v)|(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5"))))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
New(a, v)
(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
New(a, v)
(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"


Id: 2
Execution stack: 
(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)


Id: 2
Execution stack: 
(New(v, "30")|(print(rH(v))|print(rH(rH(a)) + "5")))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)


Id: 2
Execution stack: 
New(v, "30")
(print(rH(v))|print(rH(rH(a)) + "5"))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)


Id: 2
Execution stack: 
New(v, "30")
(print(rH(v))|print(rH(rH(a)) + "5"))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)


Id: 2
Execution stack: 
(print(rH(v))|print(rH(rH(a)) + "5"))
Symbol table: 
a -> (2, Ref(int))
v -> (3, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)
3 -> "30"


Id: 2
Execution stack: 
(print(rH(v))|print(rH(rH(a)) + "5"))
Symbol table: 
a -> (2, Ref(int))
v -> (3, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)
3 -> "30"


Id: 2
Execution stack: 
print(rH(v))
print(rH(rH(a)) + "5")
Symbol table: 
a -> (2, Ref(int))
v -> (3, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)
3 -> "30"


Id: 2
Execution stack: 
print(rH(v))
print(rH(rH(a)) + "5")
Symbol table: 
a -> (2, Ref(int))
v -> (3, int)
Output list: 
File table:
Heap Table:
1 -> "20"
2 -> (1, int)
3 -> "30"


Id: 2
Execution stack: 
print(rH(rH(a)) + "5")
Symbol table: 
a -> (2, Ref(int))
v -> (3, int)
Output list: 
"30"
File table:
Heap Table:
1 -> "20"
2 -> (1, int)
3 -> "30"


Id: 2
Execution stack: 
print(rH(rH(a)) + "5")
Symbol table: 
a -> (2, Ref(int))
v -> (3, int)
Output list: 
"30"
File table:
Heap Table:
1 -> "20"
2 -> (1, int)
3 -> "30"


Id: 2
Execution stack: 
Symbol table: 
a -> (2, Ref(int))
v -> (3, int)
Output list: 
"30"
"25"
File table:
Heap Table:
1 -> "20"
2 -> (1, int)
3 -> "30"


